// <auto-generated />
using System;
using BuildTheLanesAPI.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuildTheLanesAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200408112116_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BuildTheLanesAPI.Entities.Admin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("l_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("password_hash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("password_salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("BuildTheLanesAPI.Entities.Donator", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("amount_donated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("l_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("password_hash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("password_salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("roles")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Donators");
                });

            modelBuilder.Entity("BuildTheLanesAPI.Entities.Engineer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("amount_donated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("l_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("password_hash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("password_salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Engineers");
                });

            modelBuilder.Entity("BuildTheLanesAPI.Entities.EngineerCertification", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("certification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("email");

                    b.ToTable("EngineerCertifications");
                });

            modelBuilder.Entity("BuildTheLanesAPI.Entities.EngineerDegree", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("degrees")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("email");

                    b.ToTable("EngineerDegrees");
                });

            modelBuilder.Entity("BuildTheLanesAPI.Entities.Project", b =>
                {
                    b.Property<int>("project_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("start_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zip_code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("project_number");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BuildTheLanesAPI.Entities.Responsibility", b =>
                {
                    b.Property<int>("number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("project_num")
                        .HasColumnType("int");

                    b.Property<string>("staff_email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("number");

                    b.ToTable("Responsibilities");
                });

            modelBuilder.Entity("BuildTheLanesAPI.Entities.Staff", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("l_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("password_hash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("password_salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("BuildTheLanesAPI.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("amount_donated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("l_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("password_hash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("password_salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
